name: Master Release
run-name: "Master Release"
on:
  push:
    branches:
      - 'master'

jobs:
  determine-if-deploy:
    runs-on: ubuntu-latest
    outputs:
      deploy: ${{ steps.tag_exists.outputs.exists  == 'false' }}
      version: ${{ steps.latest_version.outputs.version }}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4.4.0
      with:
        python-version: "3.11"
    - name: Install Changelogger
      run: pip install changelogged==0.11.3
    - name: Get Latest Version
      id: latest_version
      run: |
        VERSION=$(changelogger versions --latest)
        echo "version=${VERSION}" >> $GITHUB_OUTPUT
    - uses: mukunku/tag-exists-action@v1.2.0
      id: tag_exists
      with:
        tag: ${{ steps.latest_version.outputs.version }}

  github-tag-and-release:
    runs-on: ubuntu-latest
    needs: determine-if-deploy
    if: needs.determine-if-deploy.outputs.deploy == 'true'
    steps:
    - uses: actions/checkout@v3
    - name: Setup Python 3.11
      uses: actions/setup-python@v4.4.0
      with:
        python-version: '3.11'

    - name: Install Changelogger
      run: pip install changelogged==0.11.3

    - name: Get Changelog Contents
      id: changelog
      run: |
        DELIMITER=$(openssl rand -base64 12)
        VERSION=${{ needs.determine-if-deploy.outputs.version }}
        # Need to capture multiline output in env to preserve newlines
        echo "content<<${DELIMITER}" >> $GITHUB_ENV
        # Add changelog content to the env for release notes
        changelogger notes $VERSION --no-pretty >> $GITHUB_ENV
        echo ${DELIMITER} >> $GITHUB_ENV

    - name: Create GitHub Tag & Release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ needs.determine-if-deploy.outputs.version }}
        commit: ${{ github.sha }}
        name: Release ${{ needs.determine-if-deploy.outputs.version }}
        body: ${{ env.content }}
        prerelease: true

    - name: Send PagerDuty alert on failure
      if: ${{ failure() }}
      uses: award28/action-pagerduty-alert@0.4.0
      with:
        pagerduty-integration-key: '${{ secrets.PAGERDUTY_INTEGRATION_KEY }}'
        pagerduty-dedup-key: magento_two_cd

  integration-release:
    runs-on: ubuntu-latest
    needs: [determine-if-deploy, github-tag-and-release]
    steps:
    - run: echo "Releasing to Magento2"
    - name: Send PagerDuty alert on failure
      if: ${{ failure() }}
      uses: award28/action-pagerduty-alert@0.4.0
      with:
        pagerduty-integration-key: '${{ secrets.PAGERDUTY_INTEGRATION_KEY }}'
        pagerduty-dedup-key: magento_two_cd
